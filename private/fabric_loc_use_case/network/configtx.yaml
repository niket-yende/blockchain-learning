#
# Copyright 2018 IBM All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    # SampleOrg defines an MSP using the sampleconfig.  It should never be used
    # in production but may be used as a template for other definitions
    - &LocOrdererOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: LocOrdererOrg

        # ID to load the MSP definition as
        ID: LocOrdererMSP

        # MSPDir is the filesystem path which contains the MSP configuration
        MSPDir: crypto-config/ordererOrganizations/loc.com/msp

        # Policies for reading, writing, configuration
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('LocOrdererMSP.member')"
            Writers:
                Type: Signature
                Rule: "OR('LocOrdererMSP.member')"
            Admins:
                Type: Signature
                Rule: "OR('LocOrdererMSP.admin')"

    - &ExporterOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ExporterOrgMSP

        # ID to load the MSP definition as
        ID: ExporterOrgMSP

        MSPDir: crypto-config/peerOrganizations/exporterorg.loc.com/msp

        # Policies for reading, writing, configuration
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('ExporterOrgMSP.admin', 'ExporterOrgMSP.peer', 'ExporterOrgMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('ExporterOrgMSP.admin', 'ExporterOrgMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('ExporterOrgMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.exporterorg.loc.com
              Port: 7051

    - &ImporterOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: ImporterOrgMSP

        # ID to load the MSP definition as
        ID: ImporterOrgMSP

        MSPDir: crypto-config/peerOrganizations/importerorg.loc.com/msp

        # Policies for reading, writing, configuration
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('ImporterOrgMSP.admin', 'ImporterOrgMSP.peer', 'ImporterOrgMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('ImporterOrgMSP.admin', 'ImporterOrgMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('ImporterOrgMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.importerorg.loc.com
              Port: 7051

    - &IssuingBankOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: IssuingBankOrgMSP

        # ID to load the MSP definition as
        ID: IssuingBankOrgMSP

        MSPDir: crypto-config/peerOrganizations/issuingbankorg.loc.com/msp

        # Policies for reading, writing, configuration
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('IssuingBankOrgMSP.admin', 'IssuingBankOrgMSP.peer', 'IssuingBankOrgMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('IssuingBankOrgMSP.admin', 'IssuingBankOrgMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('IssuingBankOrgMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.issuingbankorg.loc.com
              Port: 7051

    - &AdvisingBankOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: AdvisingBankOrgMSP

        # ID to load the MSP definition as
        ID: AdvisingBankOrgMSP

        MSPDir: crypto-config/peerOrganizations/advisingbankorg.loc.com/msp

        # Policies for reading, writing, configuration
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('AdvisingBankOrgMSP.admin', 'AdvisingBankOrgMSP.peer', 'AdvisingBankOrgMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('AdvisingBankOrgMSP.admin', 'AdvisingBankOrgMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('AdvisingBankOrgMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.advisingbankorg.loc.com
              Port: 7051


    - &CarrierOrg
        # DefaultOrg defines the organization which is used in the sampleconfig
        # of the fabric.git development environment
        Name: CarrierOrgMSP

        # ID to load the MSP definition as
        ID: CarrierOrgMSP

        MSPDir: crypto-config/peerOrganizations/carrierorg.loc.com/msp

        # Policies for reading, writing, configuration
        Policies:
            Readers:
                Type: Signature
                Rule: "OR('CarrierOrgMSP.admin', 'CarrierOrgMSP.peer', 'CarrierOrgMSP.client')"
            Writers:
                Type: Signature
                Rule: "OR('CarrierOrgMSP.admin', 'CarrierOrgMSP.client')"
            Admins:
                Type: Signature
                Rule: "OR('CarrierOrgMSP.admin')"

        AnchorPeers:
            # AnchorPeers defines the location of peers which can be used
            # for cross org gossip communication.  Note, this value is only
            # encoded in the genesis block in the Application section context
            - Host: peer0.carrierorg.loc.com
              Port: 7051

################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: solo

    Addresses:
        - orderer.loc.com:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    Kafka:
        # Brokers: A list of Kafka brokers to which the orderer connects
        # NOTE: Use IP:port notation
        Brokers:
            - 127.0.0.1:9092

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Orderer policies, their canonical path is
    #   /Channel/Orderer/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

################################################################################
#
#   SECTION: Application
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for application related parameters
#
################################################################################
Application: &ApplicationDefaults

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:

    # Policies defines the set of policies at this level of the config tree
    # For Application policies, their canonical path is
    #   /Channel/Application/<PolicyName>
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

################################################################################
#
#   CHANNEL
#
#   This section defines the values to encode into a config transaction or
#   genesis block for channel related parameters.
#
################################################################################
Channel: &ChannelDefaults
    # Policies defines the set of policies at this level of the config tree
    # For Channel policies, their canonical path is
    #   /Channel/<PolicyName>
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "ANY Admins"

################################################################################
#
#   SECTION: Capabilities
#
#   - This section defines the capabilities of fabric network. This is a new
#   concept as of v1.1.0 and should not be utilized in mixed networks with
#   v1.0.x peers and orderers.  Capabilities define features which must be
#   present in a fabric binary for that binary to safely participate in the
#   fabric network.  For instance, if a new MSP type is added, newer binaries
#   might recognize and validate the signatures from this type, while older
#   binaries without this support would be unable to validate those
#   transactions.  This could lead to different versions of the fabric binaries
#   having different world states.  Instead, defining a capability for a channel
#   informs those binaries without this capability that they must cease
#   processing transactions until they have been upgraded.  For v1.0.x if any
#   capabilities are defined (including a map with all capabilities turned off)
#   then the v1.0.x peer will deliberately crash.
#
################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.  Set the value of the capability to true to require it.
    Global: &ChannelCapabilities
        # V1.1 for Global is a catchall flag for behavior which has been
        # determined to be desired for all orderers and peers running v1.0.x,
        # but the modification of which would cause incompatibilities.  Users
        # should leave this flag set to true.
        V1_1: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # manipulated without concern for upgrading peers.  Set the value of the
    # capability to true to require it.
    Orderer: &OrdererCapabilities
        # V1.1 for Order is a catchall flag for behavior which has been
        # determined to be desired for all orderers running v1.0.x, but the
        # modification of which  would cause incompatibilities.  Users should
        # leave this flag set to true.
        V1_1: true

    # Application capabilities apply only to the peer network, and may be safely
    # manipulated without concern for upgrading orderers.  Set the value of the
    # capability to true to require it.
    Application: &ApplicationCapabilities
        # V1.1 for Application is a catchall flag for behavior which has been
        # determined to be desired for all peers running v1.0.x, but the
        # modification of which would cause incompatibilities.  Users should
        # leave this flag set to true.
        V1_2: true

################################################################################
#
#   Profile
#
#   - Different configuration profiles may be encoded here to be specified
#   as parameters to the configtxgen tool
#
################################################################################
Profiles:

    FiveOrgsTradeOrdererGenesis:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
        Orderer:
            <<: *OrdererDefaults
            Organizations:
                - *LocOrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
        Consortiums:
            TradeConsortium:
                Organizations:
                    - *ExporterOrg
                    - *ImporterOrg
                    - *IssuingBankOrg
                    - *AdvisingBankOrg
                    - *CarrierOrg
    FiveOrgsTradeChannel:
        Consortium: TradeConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *ExporterOrg
                - *ImporterOrg
                - *IssuingBankOrg
                - *AdvisingBankOrg
                - *CarrierOrg
            Capabilities:
                <<: *ApplicationCapabilities
